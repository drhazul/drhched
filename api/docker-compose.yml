services:
  db:
    image: postgres:16-alpine
    container_name: drhched_db
    restart: unless-stopped
    env_file:
      - .env.prod
    environment:
      # Si alguna var faltara en .env.prod, puedes forzar defaults aquí:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend
    # Exponer 5432 para administración desde tu LAN (pgAdmin). Puedes quitarlo luego.
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: drhched_api
    restart: unless-stopped
    env_file:
      - .env.prod
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend
    # Exponer la API sólo por la IP LAN del host
    ports:
      - "192.168.200.212:3000:3000"

networks:
  backend:
    driver: bridge

volumes:
  postgres-data:
